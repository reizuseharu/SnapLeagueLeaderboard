{"version":3,"sources":["assets/jss/material-dashboard-react.tsx","assets/jss/material-dashboard-react/layouts/dashboardStyle.tsx","assets/jss/material-dashboard-react/views/dashboardStyle.tsx","views/DartsApp/leaderboardGenerator.ts","views/DartsApp/LeaderboardBody.tsx","layouts/Leaderboard.tsx","index.tsx","assets/img/sidebar-2.jpg"],"names":["hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","primaryBoxShadow","boxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","title","background","margin","paddingTop","borderTop","height","fontFamily","fontWeight","lineHeight","color","textDecoration","marginTop","marginBottom","minHeight","appStyle","theme","createStyles","wrapper","position","top","mainPanel","breakpoints","up","width","maxHeight","overflowScrolling","content","padding","map","dashboardStyle","successText","upArrowCardCategory","stats","display","fontSize","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","pointConversion","Map","createLeaderboard","races","pointLeaderboard","averageTimeLeaderboard","averagePointsLeaderboard","raceTimes","currentLinealChampion","forEach","race","raceRunners","Set","runners","runner","name","runnerPlacements","runnerName","runnerPlacement","placement","runnerPoints","get","convertPlacementToPoints","initialPoints","set","runnerTime","time","runnerTimes","push","reduce","totalTime","filter","has","sortLeaderboard","entries","sort","a","b","reverse","Dashboard","props","handleChange","state","sortedPointLeaderboard","bind","fetch","raceResponse","json","console","log","this","setState","dir","Promise","resolve","style","backgroundColor","justifyContent","alignItems","Table","size","aria-label","TableHead","TableCell","align","TableBody","Array","from","index","points","TableRow","React","Component","withStyles","Leaderboard","refs","handleImageClick","i","image","handleColorClick","c","handleFixedClick","fixedClasses","handleDrawerToggle","mobileOpen","resizeFunction","window","innerWidth","hasImage","location","pathname","navigator","platform","indexOf","PerfectScrollbar","addEventListener","e","history","scrollTop","removeEventListener","classes","LeaderboardBody","hist","createBrowserHistory","ReactDOM","render","path","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a40f8059.chunk.js","sourcesContent":["/*!\n\n =========================================================\n * Material Dashboard React - v1.6.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Copyright 2019 Reizu (http://www.reizu.dev)\n * Licensed under MIT (https://github.com/reizuseharu/SnapLeagueLeaderboard/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = (input: any) => {\n  input = input + '';\n  input = input.replace('#', '');\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error('input is not a valid hex color.');\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    ', ' +\n    parseInt(second, 16) +\n    ', ' +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: 'all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)'\n};\n\nconst container = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto'\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: 300,\n  lineHeight: '1.5em'\n};\n\nconst primaryColor = ['#9c27b0', '#ab47bc', '#8e24aa', '#af2cc5'];\nconst warningColor = ['#ff9800', '#ffa726', '#fb8c00', '#ffa21a'];\nconst dangerColor = ['#f44336', '#ef5350', '#e53935', '#f55a4e'];\nconst successColor = ['#4caf50', '#66bb6a', '#43a047', '#5cb860'];\nconst infoColor = ['#00acc1', '#26c6da', '#00acc1', '#00d3ee'];\nconst roseColor = ['#e91e63', '#ec407a', '#d81b60', '#eb3573'];\nconst grayColor = [\n  '#999',\n  '#777',\n  '#3C4858',\n  '#AAAAAA',\n  '#D2D2D2',\n  '#DDD',\n  '#b4b4b4',\n  '#555555',\n  '#333',\n  '#a9afbb',\n  '#eee',\n  '#e7e7e7'\n];\nconst blackColor = '#000';\nconst whiteColor = '#FFF';\n\nconst boxShadow = {\n  boxShadow:\n    '0 10px 30px -12px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.42), 0 4px 25px 0px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.12), 0 8px 10px -5px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.2)'\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(primaryColor[0]) +\n    ',.4)'\n};\nconst infoBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(infoColor[0]) +\n    ',.4)'\n};\nconst successBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(successColor[0]) +\n    ',.4)'\n};\nconst warningBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(warningColor[0]) +\n    ',.4)'\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(dangerColor[0]) +\n    ',.4)'\n};\nconst roseBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0 rgba(' +\n    hexToRgb(blackColor) +\n    ',.14), 0 7px 10px -5px rgba(' +\n    hexToRgb(roseColor[0]) +\n    ',.4)'\n};\n\nconst warningCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + warningColor[1] + ', ' + warningColor[2] + ')',\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + successColor[1] + ', ' + successColor[2] + ')',\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + dangerColor[1] + ', ' + dangerColor[2] + ')',\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + infoColor[1] + ', ' + infoColor[2] + ')',\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + primaryColor[1] + ', ' + primaryColor[2] + ')',\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background:\n    'linear-gradient(60deg, ' + roseColor[1] + ', ' + roseColor[2] + ')',\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: '0 20px 10px',\n  paddingTop: '10px',\n  borderTop: '1px solid ' + grayColor[10],\n  height: 'auto',\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: '-20px 15px 0',\n  borderRadius: '3px',\n  padding: '15px'\n};\n\nconst card = {\n  display: 'inline-block',\n  position: 'relative',\n  width: '100%',\n  margin: '25px 0',\n  boxShadow: '0 1px 4px 0 rgba(' + hexToRgb(blackColor) + ', 0.14)',\n  borderRadius: '3px',\n  color: 'rgba(' + hexToRgb(blackColor) + ', 0.87)',\n  background: whiteColor\n};\n\nconst defaultBoxShadow = {\n  border: '0',\n  borderRadius: '3px',\n  boxShadow:\n    '0 10px 20px -12px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.42), 0 3px 20px 0px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.12), 0 8px 10px -5px rgba(' +\n    hexToRgb(blackColor) +\n    ', 0.2)',\n  padding: '10px 0',\n  transition: 'all 150ms ease 0s'\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: 'none',\n  fontWeight: '300',\n  marginTop: '30px',\n  marginBottom: '25px',\n  minHeight: '32px',\n  fontFamily: '\\'Roboto\\', \\'Helvetica\\', \\'Arial\\', sans-serif',\n  '& small': {\n    color: grayColor[1],\n    fontWeight: '400',\n    lineHeight: '1'\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: '0',\n  marginBottom: '3px',\n  minHeight: 'auto',\n  '& a': {\n    ...title,\n    marginTop: '.625rem',\n    marginBottom: '0.75rem',\n    minHeight: 'auto'\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: '-.375rem'\n};\n\nconst cardLink = {\n  '& + $cardLink': {\n    marginLeft: '1.25rem'\n  }\n};\n\nexport {\n  hexToRgb,\n  // variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import {\n  drawerWidth,\n  transition,\n  container\n} from '../../material-dashboard-react';\nimport { createStyles, Theme } from '@material-ui/core';\n\nconst appStyle = (theme: Theme) => createStyles({\n  wrapper: {\n    position: 'relative',\n    top: '0',\n    height: '100vh'\n  },\n  mainPanel: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: 'auto',\n    position: 'relative',\n    float: 'right',\n    ...transition,\n    maxHeight: '100%',\n    width: '100%',\n    overflowScrolling: 'touch'\n  },\n  content: {\n    marginTop: '70px',\n    padding: '30px 15px',\n    minHeight: 'calc(100vh - 123px)'\n  },\n  container,\n  map: {\n    marginTop: '70px'\n  }\n});\n\nexport default appStyle;\n","import {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb\n} from '../../material-dashboard-react';\nimport { createStyles } from '@material-ui/core';\n\nconst dashboardStyle = createStyles({\n  successText: {\n    color: successColor[0]\n  },\n  upArrowCardCategory: {\n    width: '16px',\n    height: '16px'\n  },\n  stats: {\n    color: grayColor[0],\n    display: 'inline-flex',\n    fontSize: '12px',\n    lineHeight: '22px',\n    '& svg': {\n      top: '4px',\n      width: '16px',\n      height: '16px',\n      position: 'relative',\n      marginRight: '3px',\n      marginLeft: '3px'\n    },\n    '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n      top: '4px',\n      fontSize: '16px',\n      position: 'relative',\n      marginRight: '3px',\n      marginLeft: '3px'\n    }\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    paddingTop: '10px',\n    marginBottom: '0'\n  },\n  cardCategoryWhite: {\n    color: 'rgba(' + hexToRgb(whiteColor) + ',.62)',\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    marginBottom: '0'\n  },\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: '0px',\n    minHeight: 'auto',\n    fontWeight: 300,\n    fontFamily: '\\'Roboto\\', \\'Helvetica\\', \\'Arial\\', sans-serif',\n    marginBottom: '3px',\n    textDecoration: 'none',\n    '& small': {\n      color: grayColor[1],\n      fontWeight: 400,\n      lineHeight: 1\n    }\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: '0px',\n    minHeight: 'auto',\n    fontWeight: 300,\n    fontFamily: '\\'Roboto\\', \\'Helvetica\\', \\'Arial\\', sans-serif',\n    marginBottom: '3px',\n    textDecoration: 'none',\n    '& small': {\n      color: grayColor[1],\n      fontWeight: 400,\n      lineHeight: 1\n    }\n  }\n});\n\nexport default dashboardStyle;\n","export interface Runner {\n    name: string;\n    time: number;\n    placement: number;\n}\n\nexport interface Race {\n    name: string;\n    date: Date;\n    runners: Runner[];\n}\n\nlet pointConversion = new Map([\n    [1, 10],\n    [2, 7],\n    [3, 5],\n    [4, 4],\n    [5, 3],\n    [6, 2],\n    [7, 1],\n]);\n\nfunction convertPlacementToPoints(placement: number): number {\n    return pointConversion.get(placement) ?? 0\n}\n\nexport function createLeaderboard(races: Race[]): [Map<string, number>, Map<string, number>, Map<string, number>, string][] {\n    let pointLeaderboard: Map<string, number> = new Map();\n    let averageTimeLeaderboard: Map<string, number> = new Map();\n    let averagePointsLeaderboard: Map<string, number> = new Map();\n    let raceTimes = new Map();\n    let currentLinealChampion: string = \"\";\n\n    races.forEach((race: Race) => {\n        let raceRunners = new Set(race.runners.map((runner) => runner.name));\n        let runnerPlacements = new Map();\n        race.runners.forEach((runner) => {\n            let runnerName = runner.name;\n            let runnerPlacement = runner.placement;\n            let runnerPoints = convertPlacementToPoints(runnerPlacement);\n\n            let initialPoints: number = pointLeaderboard.get(runnerName) ?? 0;\n\n            pointLeaderboard.set(runnerName, initialPoints + runnerPoints);\n\n            let runnerTime = runner.time;\n            let runnerTimes: number[] = raceTimes.get(runnerName) ?? [];\n\n            runnerTimes.push(runnerTime);\n            raceTimes.set(runnerName, runnerTimes);\n\n            averageTimeLeaderboard.set(runnerName, runnerTimes.reduce((totalTime, time) => totalTime + time, 0) / runnerTimes.filter((time) => time > 0).length);\n            averagePointsLeaderboard.set(runnerName, (pointLeaderboard.get(runnerName) ?? 0) / runnerTimes.length);\n            runnerPlacements.set(runnerName, runnerPlacement);\n\n            if (currentLinealChampion === \"\" && runnerPlacement === 1) {\n                currentLinealChampion = runnerName;\n            }\n            if (raceRunners.has(currentLinealChampion) && runnerPlacement === 1) {\n                currentLinealChampion = runnerName;\n            }\n        });\n    });\n\n    // @ts-ignore\n    return [pointLeaderboard, averageTimeLeaderboard, averagePointsLeaderboard, currentLinealChampion];\n}\n\n\nexport function sortLeaderboard(pointLeaderboard: Map<string, number>): Map<string, number> {\n    // @ts-ignore\n    return new Map([...pointLeaderboard.entries()].sort((a, b) => {\n        return a[1] - b[1];\n    }).reverse());\n}\n","import React from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport dashboardStyle from '../../assets/jss/material-dashboard-react/views/dashboardStyle';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport {createLeaderboard, Race, sortLeaderboard} from \"./leaderboardGenerator\";\n\ninterface Props {\n  location: any;\n  history: any;\n}\n\ninterface State {\n  pointLeaderboard: Map<string, number>;\n  averageTimeLeaderboard: Map<string, number>;\n  averagePointsLeaderboard: Map<string, number>;\n  sortedPointLeaderboard: Map<string, number>;\n  currentLinealChampion: string;\n}\n\nclass Dashboard extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      pointLeaderboard: new Map(),\n      averageTimeLeaderboard: new Map(),\n      averagePointsLeaderboard: new Map(),\n      sortedPointLeaderboard: new Map(),\n      currentLinealChampion: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = () => {};\n\n  async componentWillMount() {\n    let raceFile: string = \"https://gist.githubusercontent.com/reizuseharu/7b71bcb7cb253b0d0190225dc1699e35/raw/snap-league-results-pre-alpha.json\";\n    let raceResponse: Response = await fetch(raceFile);\n\n    let races: Race[] = await raceResponse.json();\n\n    // @ts-ignore\n    let [pointLeaderboard, averageTimeLeaderboard, averagePointsLeaderboard, currentLinealChampion]: [Map<string, number>, Map<string, number>, Map<string, number>, string] = createLeaderboard(races);\n    let sortedPointLeaderboard: Map<string, number> = sortLeaderboard(pointLeaderboard);\n\n    console.log(\"Working\");\n\n    this.setState({\n      pointLeaderboard: pointLeaderboard,\n      averageTimeLeaderboard: averageTimeLeaderboard,\n      averagePointsLeaderboard: averagePointsLeaderboard,\n      sortedPointLeaderboard: sortedPointLeaderboard,\n      currentLinealChampion: currentLinealChampion\n    });\n\n    console.dir(this.state);\n    return Promise.resolve();\n  }\n\n  render() {\n    return (\n      <div style={{\n        height:\"100vh\",\n        backgroundColor: \"#99CCFF\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"}}>\n        <Table size=\"small\" aria-label=\"a dense table\" style={{\n          marginLeft: \"20%\",\n          marginRight: \"20%\",\n          width: \"60%\"\n        }}>\n          <TableHead style={{backgroundColor: \"#3390FF\"}}>\n            <TableCell align=\"center\">Runner</TableCell>\n            <TableCell align=\"center\">Points</TableCell>\n            <TableCell align=\"center\">Average Time</TableCell>\n          </TableHead>\n          <TableBody>\n            {Array.from(this.state.sortedPointLeaderboard).map(([runnerName, points], index) => {\n              return <TableRow style={(() => { if (index % 2 === 1) {return {backgroundColor: \"#BBBBBB\"}} else {return {backgroundColor: \"#B19CD9\"}}})()}>\n                <TableCell align=\"center\" style={(() => { if (runnerName === this.state.currentLinealChampion) return {color: \"gold\"}})()}>{runnerName}</TableCell>\n                <TableCell align=\"center\">{points}</TableCell>\n                <TableCell align=\"center\">{this.state.averageTimeLeaderboard.get(runnerName)}</TableCell>\n              </TableRow>;\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\n// Dashboard.propTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n\nexport default withStyles(dashboardStyle)(Dashboard);\n","/* eslint-disable */\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// creates a beautiful scrollbar\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'perfect-scrollbar/css/perfect-scrollbar.css';\n// @material-ui/core components\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport dashboardStyle from '../assets/jss/material-dashboard-react/layouts/dashboardStyle';\n\nimport image from 'assets/img/sidebar-2.jpg';\nimport LeaderboardBody from \"../views/DartsApp/LeaderboardBody\";\n\ninterface Props {\n  classes: any;\n  location: any;\n  history: any;\n}\n\ninterface State {\n  image: string;\n  color: string;\n  hasImage: boolean;\n  fixedClasses: string;\n  mobileOpen: boolean;\n}\n\nclass Leaderboard extends React.Component<Props, State> {\n  refs: any;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      image: image,\n      color: 'blue',\n      hasImage: true,\n      fixedClasses: 'dropdown show',\n      mobileOpen: false\n    };\n  }\n  \n  handleImageClick = (i: string) => {\n    this.setState({ image: i });\n  };\n\n  handleColorClick = (c: string) => {\n    this.setState({ color: c });\n  };\n\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === 'dropdown') {\n      this.setState({ fixedClasses: 'dropdown show' });\n    } else {\n      this.setState({ fixedClasses: 'dropdown' });\n    }\n  };\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  getRoute() {\n    return this.props.location.pathname !== '/darts';\n  }\n\n  resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  };\n\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n    window.addEventListener('resize', this.resizeFunction);\n  }\n\n  componentDidUpdate(e: any) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeFunction);\n  }\n\n  render() {\n    const { classes, ...rest } = this.props;\n    return (\n      // @ts-ignore\n      <LeaderboardBody location={this.props.location} history={this.props.history} />\n    );\n  }\n}\n\nexport default withStyles(dashboardStyle)(Leaderboard);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\n// core components\nimport Leaderboard from \"layouts/Leaderboard\";\n\nimport \"assets/css/material-dashboard-react.css?v=1.8.0\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/leaderboard\" component={Leaderboard} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-2.310509c9.jpg\";"],"sourceRoot":""}